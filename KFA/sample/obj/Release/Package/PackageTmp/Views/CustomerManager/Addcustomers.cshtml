@using GridMvc.Html
@model sample.Models.CustomerModel

@{
    ViewBag.Title = "Addcustomers";
    //Layout = "~/Views/Shared/_SideBar.cshtml";
}
@*Layout = "~/_Sistema.cshtml";*@
<div>
    @if (Session["Success"] != null)
    {
        <div class="alert alert-success">
            @Session["Success"].ToString();
            <a href="#" class="close">&times;</a>
        </div>
    }
        @if (Session["fail"] != null)
        {
            <div class ="alert alert-success">
                @Session["fail"].ToString();
                <a href="#" class="close">&times;</a>
</div>
    }

</div>
<div class="panel panel-default text-uppercase">
 
        <div class="panel-heading" style="font-size:xx-large">
            <img src="~/Content/Images/logo.png" alt="Smiley face" />Customers <img src="~/Content/Images/Happy.jpg" alt="Smiley face" style="width:20%;height:12%; margin-left:30%" /><div class="col-sm-3 col-md-3 pull-right">

                @using (Ajax.BeginForm("Addcustomers", "CustomerManager", new AjaxOptions { HttpMethod = "post" }, new { @class = "navbar-form", role = "search" }))
                {
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.Search, new { @class = "form-control", placeholder = "Search Customer", name = "srch-term" })
                        <div class="input-group-btn">
                            <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="panel-body">
            <div class="col-lg-offset-0 col-lg-12">
                <div class="btn btn-default"> @Html.ActionLink("CREATE CUSTOMER", "Createcustomers")</div>
                @Html.Grid(Model.customerlist).Columns(columns =>
                    {
                        //columns.Add(c => c.Id).Titled("Customer Id");
                        columns.Add(c => c.FullName).Titled("FULL NAME");
                        columns.Add(c => c.PhoneNumber).Titled("PHONE NUMBER").Filterable(true);
                        columns.Add(c => c.EmailAdress).Titled("EMAIL ADDRESS");
                        columns.Add(c => c.Adress).Titled("ADDRESS");
                        //columns.Add(c => Html.ActionLink("Edit", "Editcustomers", "CustomerManager", new { Id = c.Id }));
                        columns.Add(c => c.Id)
                               .Titled("EDIT")
                               .Sanitized(false)
                               .Encoded(false)
                            //.RenderValueAs(o => Html.ActionLink("Edit", "EditCustomer", "Customer", new { CustomerId = o.CustomerId }, new { title = "Please click here to edit the record", @class = "modal-link" }).ToHtmlString());
                            .RenderValueAs(c => Html.ActionLink("EDIT", "Editcustomers", new { controller = "CustomerManager", Id = c.Id }));

                        columns.Add(c => c.uniqueId)
                               .Titled("DELETE")
                               .Sanitized(false)
                               .Encoded(false)
                            //.RenderValueAs(o => Html.ActionLink("Edit", "EditCustomer", "Customer", new { CustomerId = o.CustomerId }, new { title = "Please click here to edit the record", @class = "modal-link" }).ToHtmlString());
                            .RenderValueAs(c => Html.ActionLink("DELETE", "Delete", new { controller = "CustomerManager", uniqueId = c.uniqueId }, new { onclick = "return confirm('Are you sure you wish to delete this customer?');" }));
                    }).WithPaging(10).Sortable(true)

            </div>
        </div>
    </div>
</div>


